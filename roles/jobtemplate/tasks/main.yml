---
- name: Read Secret Configuration from connection_secret
  kubernetes.core.k8s_info:
    kind: Secret
    api_version: v1
    name: "{{ connection_secret }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
  register: tower_connection_secret
  when: connection_secret is defined

- name: DEPRECATED Read Secret Configuration from tower_auth_secret
  kubernetes.core.k8s_info:
    kind: Secret
    api_version: v1
    name: "{{ tower_auth_secret }}"
    namespace: "{{ ansible_operator_meta.namespace }}"
  register: tower_connection_deprecated_secret
  when: tower_auth_secret is defined

- name: Set fact based on secret results
  set_fact:
     tower_config_secret: "{{ tower_connection_secret }}"
  when: tower_connection_secret is not skipped and tower_connection_deprecated_secret is skipped

- name: Set fact based on secret results
  set_fact:
    tower_config_secret: "{{ tower_connection_deprecated_secret }}"
  when: tower_connection_deprecated_secret is not skipped and tower_connection_secret is skipped

- name: Validate Secret Exists
  assert:
    that:
      - tower_config_secret["resources"] is defined and (tower_config_secret["resources"]|length>0)
    fail_msg: "Tower Secret must exist"

- name: Create Job Template
  awx.awx.job_template:
    name: "{{ job_template_name }}"
    job_type: "{{ job_template_type | default('run') }}"
    inventory: "{{ job_template_inventory }}"
    project: "{{ job_template_project }}"
    playbook: "{{ job_template_playbook }}"
    credentials: "{{ job_template_credentials | default(omit) }}"
    vault_credential: "{{ job_template_vault_credentials | default(omit) }}"
    forks: "{{ job_template_forks | default(omit) }}"
    limit: "{{ job_template_limit | default(omit) }}"
    verbosity: "{{ job_template_verbosity | default(omit) }}"
    extra_vars: "{{ job_template_extra_vars | default(omit) }}"
    become_enabled: "{{ job_template_become_enabled | default(omit) }}"
    allow_simultaneous: "{{ job_template_allow_simultaneous | default(omit) }}"
    state: "{{ tower_resource_state if tower_resource_state is defined else 'present' }}"
    ask_credential_on_launch: "{{ job_template_ask_credential | default(omit) }}"
    ask_inventory_on_launch: "{{ job_template_ask_inventory | default(omit) }}"
    ask_job_type_on_launch: "{{ job_template_ask_job_type | default(omit) }}"
    ask_limit_on_launch: "{{ job_template_ask_limit | default(omit) }}"
    ask_scm_branch_on_launch: "{{ job_template_ask_scm | default(omit) }}"
    ask_skip_tags_on_launch: "{{ job_template_ask_skip_tags | default(omit) }}"
    ask_tags_on_launch: "{{ job_template_ask_tags | default(omit) }}"
    ask_variables_on_launch: "{{ job_template_ask_vars | default(omit) }}"
    ask_verbosity_on_launch: "{{ job_template_ask_verbosity | default(omit) }}"
    custom_virtualenv: "{{ job_template_venv | default(omit) }}"
    force_handlers: "{{ job_template_force_handlers | default('no') }}"
    host_config_key: "{{ job_template_host_config_key | default(omit) }}"
    instance_groups: "{{ job_template_instance_groups | default(omit) }}"
    job_slice_count: "{{ job_template_job_slice_count | default('1') }}"
    job_tags: "{{ job_template_job_tags | default(omit) }}"
    organization: "{{ job_template_organization | default(omit) }}"
    scm_branch: "{{ job_template_scm_branch | default(omit) }}"
    skip_tags: "{{ job_template_skip_tags | default(omit) }}"
    start_at_task: "{{ job_template_start_at_task | default(omit) }}"
    use_fast_cache: "{{ job_template_use_fast_cache | default(omit) }}"
    webhook_credential: "{{ job_template_webhook_credential | default(omit) }}"
    webhook_service: "{{ job_template_webhook_service | default(omit) }}"
  environment:
    - TOWER_OAUTH_TOKEN: "{{ tower_config_secret['resources'][0]['data']['token'] | b64decode }}"
    - TOWER_HOST: "{{ tower_config_secret['resources'][0]['data']['host'] | b64decode }}"
    - TOWER_VERIFY_SSL: "False"
  register: job_template
  ignore_errors: true

- name: Update the k8s status
  operator_sdk.util.k8s_status:
    api_version: tower.ansible.com/v1alpha1
    kind: jobtemplate
    name: '{{ ansible_operator_meta.name }}'
    namespace: '{{ ansible_operator_meta.namespace }}'
    status:
      isFinished: true
      message: "Job Template Created"
  when:
    - job_template.changed

- name: Update the k8s status
  operator_sdk.util.k8s_status:
    api_version: tower.ansible.com/v1alpha1
    kind: jobtemplate
    name: '{{ ansible_operator_meta.name }}'
    namespace: '{{ ansible_operator_meta.namespace }}'
    status:
      isFinished: true
      error: true
      message: "There was an error in the job template"
  when:
    - job_template.failed
