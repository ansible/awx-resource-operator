---
- name: Read AnsibleProject Specs
  k8s_info:
    api_version: tower.ansible.com/v1alpha1
    kind: AnsibleProject
    name: "{{ lookup('env', 'ANSIBLEPROJECT_NAME') }}"
    namespace: "{{ lookup('env', 'ANSIBLEPROJECT_NAMESPACE') }}"
  register: project
  when:
    - lookup('env', 'ANSIBLEPROJECT_NAME') is defined
    - lookup('env', 'ANSIBLEPROJECT_NAMESPACE') is defined

- name: Launch Project
  include_tasks: create_project.yml
  when:
    - lookup('env','PROJECT_NAME') is defined
    - lookup('env','PROJECT_NAME') != ''

- name: Read AnsibleCredential Specs
  k8s_info:
    api_version: tower.ansible.com/v1alpha1
    kind: AnsibleCredential
    name: "{{ lookup('env', 'ANSIBLECREDENTIAL_NAME') }}"
    namespace: "{{ lookup('env', 'ANSIBLECREDENTIAL_NAMESPACE') }}"
  register: credential

- name: Launch Credential
  include_tasks: create_credential.yml
  when:
    - lookup('env','CREDENTIAL_NAME') is defined
    - lookup('env','CREDENTIAL_NAME') != ''

- name: Read AnsibleSchedule Specs
  k8s_info:
    api_version: tower.ansible.com/v1alpha1
    kind: AnsibleSchedule
    name: "{{ lookup('env', 'ANSIBLESCHEDULE_NAME') }}"
    namespace: "{{ lookup('env', 'ANSIBLESCHEDULE_NAMESPACE') }}"
  register: schedule

- name: Launch Schedule
  include_tasks: create_schedule.yml
  when:
    - lookup('env','SCHEDULE_NAME') is defined
    - lookup('env','SCHEDULE_NAME') != ''

- name: Read AnsibleInstanceGroup Specs
  k8s_info:
    api_version: tower.ansible.com/v1alpha1
    kind: AnsibleInstanceGroup
    name: "{{ lookup('env', 'ANSIBLEINSTANCEGROUP_NAME') }}"
    namespace: "{{ lookup('env', 'ANSIBLEINSTANCEGROUP_NAMESPACE') }}"
  register: instancegroup
  when:
    - lookup('env', 'ANSIBLEINSTANCEGROUP_NAME') is defined
    - lookup('env', 'ANSIBLEINSTANCEGROUP_NAMESPACE') is defined

- name: Launch Project
  include_tasks: create_instance_group.yml
  when:
    - lookup('env','INSTANCEGROUP_NAME') is defined
    - lookup('env','INSTANCEGROUP_NAME') != ''

- name: Read AnsibleJob Specs
  k8s_info:
    kind: AnsibleJob
    api_version: tower.ansible.com/v1alpha1
    name: "{{ lookup('env', 'ANSIBLEJOB_NAME') }}"
    namespace: "{{ lookup('env', 'ANSIBLEJOB_NAMESPACE') }}"
  register: ansible_job
  when:
    - lookup('env','TOWER_JOB_TEMPLATE_NAME') is defined
    - lookup('env','TOWER_JOB_TEMPLATE_NAME') != ''

- name: Read AnsibleWorkflow Specs
  k8s_info:
    kind: AnsibleWorkflow
    api_version: tower.ansible.com/v1alpha1
    name: "{{ lookup('env', 'ANSIBLEWORKFLOW_NAME') }}"
    namespace: "{{ lookup('env', 'ANSIBLEWORKFLOW_NAMESPACE') }}"
  register: ansible_workflow
  when:
    - lookup('env','TOWER_WORKFLOW_TEMPLATE_NAME') is defined
    - lookup('env','TOWER_WORKFLOW_TEMPLATE_NAME') != ''

- name: Launch a job
  include_tasks: launch_job.yml
  when:
    - lookup('env','TOWER_JOB_TEMPLATE_NAME') is defined
    - lookup('env','TOWER_JOB_TEMPLATE_NAME') != ''

- name: Launch Workflow
  include_tasks: launch_workflow.yml
  when:
    - lookup('env','TOWER_WORKFLOW_TEMPLATE_NAME') is defined
    - lookup('env','TOWER_WORKFLOW_TEMPLATE_NAME') != ''

- name: Update AnsibleJob status with Tower job result
  k8s_status:
    api_version: tower.ansible.com/v1alpha1
    kind: AnsibleJob
    name: "{{ lookup('env', 'ANSIBLEJOB_NAME') }}"
    namespace: "{{ lookup('env', 'ANSIBLEJOB_NAMESPACE') }}"
    status:
      ansibleJobResult:
        elapsed: "{{ job_result.elapsed }}"
        finished: "{{ job_result.finished }}"
        started: "{{ job_result.started }}"
        status: "{{ job_result.status }}"
  when:
    - lookup('env','TOWER_JOB_TEMPLATE_NAME') is defined
    - lookup('env','TOWER_JOB_TEMPLATE_NAME') != ''

- name: Update AnsibleWorkflow status with Tower workflow result
  k8s_status:
    api_version: tower.ansible.com/v1alpha1
    kind: AnsibleWorkflow
    name: "{{ lookup('env', 'ANSIBLEWORKFLOW_NAME') }}"
    namespace: "{{ lookup('env', 'ANSIBLEWORKFLOW_NAMESPACE') }}"
    status:
      ansibleWorkflowResult:
        elapsed: "{{ job_result.elapsed }}"
        finished: "{{ job_result.finished }}"
        started: "{{ job_result.started }}"
        status: "{{ job_result.status }}"
  when:
    - lookup('env','TOWER_WORKFLOW_TEMPLATE_NAME') is defined
    - lookup('env','TOWER_WORKFLOW_TEMPLATE_NAME') != ''
