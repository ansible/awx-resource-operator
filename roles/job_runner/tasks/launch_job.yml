---
- name: Launch a job, if error update AnsibleJob status then end play
  block:
  - name: If a label is defined ensure that it exists before proceeding
    awx.awx.label:
      name: "{{ item }}"
      state: present
    with_items: "{{ lookup('env','LABELS').split(',') }}"
    when: lookup('env','LABELS') is defined and lookup('env','LABELS') is not ""
  
    - name: Launch job
      awx.awx.job_launch:
        name: "{{ lookup('env','TOWER_JOB_TEMPLATE_NAME') }}"
        extra_vars: "{{ ansible_job['resources'][0]['spec']['extra_vars'] | default(omit) }}"
        inventory: "{{ ansible_job['resources'][0]['spec']['inventory'] | default(omit) }}"
        tags: "{{ ansible_job['resources'][0]['spec']['job_tags'] | default(omit) }}"
        skip_tags: "{{ ansible_job['resources'][0]['spec']['skip_tags'] | default(omit) }}"
        labels: "{{ lookup('env','LABELS') | default(omit) }}"
      register: job
  rescue:
    - name: Update status if job resulted in an error
      operator_sdk.util.k8s_status:
        api_version: tower.ansible.com/v1alpha1
        kind: AnsibleJob
        name: "{{ lookup('env', 'ANSIBLEJOB_NAME') }}"
        namespace: "{{ lookup('env', 'ANSIBLEJOB_NAMESPACE') }}"
        status:
          ansibleJobResult:
            status: "error"
          error_message: "{{ job.msg | default('Job failed to launch. Verify that the credentials in your connection_secret are correct. If they are, check the job standard output for more details.') }}"
    - name: End playbook run
      meta: end_play

- name: Update AnsibleJob definition with Tower job id
  k8s:
    state: present
    definition:
      kind: AnsibleJob
      apiVersion: tower.ansible.com/v1alpha1
      metadata:
        name: "{{ lookup('env', 'ANSIBLEJOB_NAME') }}"
        namespace: "{{ lookup('env', 'ANSIBLEJOB_NAMESPACE') }}"
        labels:
          tower_job_id: "{{ job.id }}"

- name: Update AnsibleJob status with Tower job status and url
  operator_sdk.util.k8s_status:
    api_version: tower.ansible.com/v1alpha1
    kind: AnsibleJob
    name: "{{ lookup('env', 'ANSIBLEJOB_NAME') }}"
    namespace: "{{ lookup('env', 'ANSIBLEJOB_NAMESPACE') }}"
    status:
      ansibleJobResult:
        changed: "{{ job.changed }}"
        failed: "{{ job.failed }}"
        status: "{{ job.status }}"
        url: "{{ lookup('env', 'TOWER_HOST') + '/#/jobs/playbook/' + (job.id|string) }}"

- name: Wait for the tower job, if error update AnsibleJob status then end play
  block:
    - name: Register Job result when complete
      awx.awx.job_wait:
        job_id: "{{ job.id }}"
      register: job_result
  rescue:
    - name: Update status if job results in an error
      operator_sdk.util.k8s_status:
        api_version: tower.ansible.com/v1alpha1
        kind: AnsibleJob
        name: "{{ lookup('env', 'ANSIBLEJOB_NAME') }}"
        namespace: "{{ lookup('env', 'ANSIBLEJOB_NAMESPACE') }}"
        status:
          ansibleJobResult:
            status: "error"
          error_message: "{{ job_result.msg | default('Job failed, check the job for more information: lookup('env', 'TOWER_HOST') + '/#/jobs/playbook/' + (job.id|string)') }}"
    - name: End playbook run
      meta: end_play
